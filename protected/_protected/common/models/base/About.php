<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use common\models\AboutTranslate;
use common\models\Lang;
use Yii;

/**
 * This is the base-model class for table "about".
 *
 * @property integer $id
 * @property string $image
 *
 * @property \common\models\AboutTranslate[] $aboutTranslates
 * @property string $aliasModel
 */
abstract class About extends \yii\db\ActiveRecord
{


    public $description;
    public $meta_description;
    public $meta_keywords;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'about';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            
            [['meta_description'] , 'each' , 'rule' => ['string']],
            [['meta_description'] , 'required'],

            ['description' , 'each' , 'rule' => ['string']],
            ['description' , 'required'],

            ['meta_keywords' , 'each' , 'rule' => ['string']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAboutTranslates()
    {
        return $this->hasMany(\common\models\AboutTranslate::className(), ['about_id' => 'id']);
    }
    public function getAboutTranslate()
    {
        return $this->hasOne(\common\models\AboutTranslate::className(), ['about_id' => 'id'])->andWhere(['lang_id' => \Yii::$app->languageId->id]);
    }


    public function afterSave($insert, $changedAttributes)
    {
        $about = \common\models\About::findOne($this->id);
        
        if($about && \Yii::$app->controller->action->id == 'create'){
            foreach(Lang::find()->all() as $lang){

                $translate = new AboutTranslate([
                    'meta_description' => $this->meta_description[$lang->url],
                    'description' => $this->description[$lang->url],
                    'meta_keywords' => $this->meta_keywords[$lang->url],
                    'lang_id' => $lang->id,
                    'about_id' => $about->id
                ]);

                $translate->save();
            }

            
        }elseif($about && \Yii::$app->controller->action->id = 'update'){
            
            foreach(Lang::find()->all() as $language){
                $translate = AboutTranslate::find()->where(['about_id' => $about->id])->andWhere(['lang_id' => $language->id])->one();
                if($translate){

                    $translate->meta_description = $this->meta_description[$language->url];
                    $translate->description = $this->description[$language->url];
                    $translate->meta_keywords = $this->meta_keywords[$language->url];
                    $translate->save();
                }else{
                    $newTranslate = new AboutTranslate([
                        'meta_description' => $this->meta_description[$language->url],
                        'description' => $this->description[$language->url],
                        'meta_keywords' => $this->meta_keywords[$language->url],
                        'lang_id' => $language->id,
                        'about_id' => $about->id
                        ]);
                    $newTranslate->save();
                }
            }
        }
        return parent::afterSave($insert , $changedAttributes);
    }


}
